#include <bits/stdc++.h>
#define mp make_pair
#define eb emplace_back
#define fi first
#define se second
using namespace std;
using cd = complex <double>;
 
typedef pair <int, int> pii;
 
const int Inf = 1000000000;
const int mod = 1000000007;
const double Pi = acos(-1);
 
void Fastio()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
}
 
int n, m;
int a[300005][9];
int Vis[1025];
 
signed main()
{
	Fastio();
	cin >> n >> m;
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= m; j++)
		{
			cin >> a[i][j];
		}
	}
	int l = 0, r = 1e9;
	int temp = (1 << m) - 1;
	while(l < r)
	{
		int mid = (l + r + 1) >> 1;
		for(int i = 0; i < 1024; i++)
		{
			Vis[i] = 0;
		}
		for(int i = 1; i <= n; i++)
		{
			int mask = 0;
			for(int j = 1; j <= m; j++)
			{
				if(a[i][j] >= mid)
				{
					mask |= (1 << (j - 1));
				}
			}
			Vis[mask] = i;
		} 
		bool ok = true;
		for(int i = 0; i < (1 << m); i++)
		{
			for(int j = 0; j < (1 << m); j++)
			{
				int t = i | j;
				if(t == temp and Vis[i] and Vis[j])
				{
					ok = false;
					break;
				}
			}
		}
		if(ok == false)
		{
			l = mid;
		}
		else
		{
			r = mid - 1;
		}
	}
	for(int i = 1; i <= n; i++)
	{
		int mask = 0;
		for(int j = 1; j <= m; j++)
		{
			if(a[i][j] >= l)
			{
				mask |= (1 << (j - 1));
			}
		}
		Vis[mask] = i;
	} 
	for(int i = 0; i < (1 << m); i++)
	{
		for(int j = 0; j < (1 << m); j++)
		{
			int t = i | j;
			if(t == temp and Vis[i] and Vis[j])
			{
				cout << Vis[i] << ' ' << Vis[j];
				return 0;
			}
		}
	}
}
